{"version":3,"sources":["../../nusantara-quiz/src/actions/quizAction.js","../../nusantara-quiz/src/reducers/quizReducer.js","../../nusantara-quiz/src/reducers/index.js","../../nusantara-quiz/src/store.js","../../nusantara-quiz/src/components/others/Navbar.jsx","../../nusantara-quiz/src/components/others/IndonesiaFlag.js","../../nusantara-quiz/src/components/others/NameField.jsx","../../nusantara-quiz/src/components/OpeningPage.jsx","../../nusantara-quiz/src/components/About.js","../../nusantara-quiz/src/components/others/Choices.jsx","../../nusantara-quiz/src/styles/QuizAnswer.style.js","../../nusantara-quiz/src/components/QuizAnswer.jsx","../../nusantara-quiz/src/components/StatusQuiz.jsx","../../nusantara-quiz/src/components/FinalPage.jsx","../../nusantara-quiz/src/components/others/loading.js","../../nusantara-quiz/src/components/Quiz.jsx","../../nusantara-quiz/src/App.js","../../nusantara-quiz/src/serviceWorker.js","../../nusantara-quiz/src/index.js"],"names":["client","contentful","space","accessToken","ADD_USERNAME","ADD_SCORE","RESET_SCORE","GET_NEXT_QUESTION","GET_OLD_QUESTIONS","FETCH_QUIZ_REQUEST","FETCH_QUIZ_SUCCESS","FETCH_QUIZ_FAILURE","ANSWER_STATUS","resetScore","dispatch","type","getNextQuestion","object","random","length","Math","floor","payload","payload1","initialState","username","questionEntries","prevQuestions","currentQuestion","isAnswered","score","counter","isFetching","error","combineReducers","data","state","arguments","undefined","action","Object","objectSpread","concat","toConsumableArray","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","setState","openDialog","handleCloseYes","history","push","handleBackHome","classes","react_default","a","createElement","className","root","AppBar_default","bar","position","Toolbar_default","variant","IconButton_default","menuButton","color","aria-label","onClick","Menu_default","Typography_default","grow","Button_default","component","NavLink","to","Dialog_default","open","onClose","aria-labelledby","aria-describedby","DialogContent_default","DialogContentText_default","id","DialogActions_default","Component","compose","withStyles","flexGrow","backgroundColor","marginLeft","marginRight","connect","withRouter","IndonesiaFlag","NameField","handleChange","event","value","target","name","handleSubmit","preventDefault","addUsername","method","onSubmit","TextField_default","label","placeholder","textField","margin","onChange","classNames","button","size","disabled","theme","container","flexWrap","spacing","unit","palette","getContrastText","red","&:hover","OpeningPage","others_NameField","About","Choices","onHover","e","hover","onLeave","userAnswered","isanswered","Paper_default","assign","onMouseOver","onMouseOut","paperclasshov","paperclass","children","toString","ImageQuestion","styled","img","_templateObject","textCounter","textAlign","fontSize","fontStyle","QuizAnswer","onHandleAnswer","answer","currentTarget","userAnswer","addScore","answerStatus","_this2","_this$props","choices","question","imageTitle","imageUrl","Grid_default","item","xs","paper","style","src","alt","map","choice","i","styleChoice","answeredColorCorr","answeredColorWrong","answeredColor","key","sm","others_Choices","paperHov","padding","text","primary","StatusQuiz","compare","quizFiltered","oldQuestionsId","sys","questionId","filter","entry","includes","handleOnClick","_this$props2","appBar","toolbar","AccountCircle_default","Fab_default","fabButton","ArrowForwardIos_default","paddingTop","paddingLeft","paddingRight","paddingBottom","list","marginBottom","subHeader","background","top","bottom","alignItems","justifyContent","zIndex","right","FinalPage","finalScore","NOTIFICATION_FINAL","bad","lib_default","good","best","progress","CircularProgress_default","Quiz","shuffle","array","temporaryValue","randomIndex","currentIndex","oldQuestionsArray","getPrevQuestions","fetchQuiz","mapQuestion","mapChoices","mapAnswer","fields","imageQuestion","file","url","title","loading","Fragment","components_QuizAnswer","components_StatusQuiz","components_FinalPage","getEntries","then","entries","entriesItems","items","randomId","entryFiltered","catch","console","questions","App","react_redux_es","react_router_dom","others_Navbar","react_router","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d60524ae.chunk.js","sourcesContent":["\nimport * as contentful from 'contentful'\n\nvar client = contentful.createClient({\n  space: '381el0fe1wnr',\n  accessToken: '79049fa3e3330fdad5efc9cfaa8108947ba665833011e56217e3d9c44882bf74' })\n\nexport const ADD_USERNAME = 'ADD_USERNAME';\nexport const ADD_SCORE = 'ADD_SCORE';\nexport const RESET_SCORE = 'RESET_SCORE';\nexport const GET_NEXT_QUESTION = 'GET_NEXT_QUESTION';\nexport const GET_OLD_QUESTIONS = 'GET_OLD_QUESTIONS';\nexport const FETCH_QUIZ_REQUEST = 'FETCH_QUIZ_REQUEST';\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\nexport const FETCH_QUIZ_FAILURE = 'FETCH_QUIZ_FAILURE';\nexport const ANSWER_STATUS = 'ANSWER_STATUS'\n\nexport const addUsername = (username) => (dispatch) => {\n  dispatch({\n    type: ADD_USERNAME,\n    username\n  });\n};\n\nexport const addScore = (score) => (dispatch) => {\n  dispatch({\n    type: ADD_SCORE,\n    score\n  });\n};\n\n\nexport const resetScore = () => (dispatch) => {\n  dispatch({\n    type: RESET_SCORE,\n  });\n};\n\nexport const getPrevQuestions = (questions) => (dispatch) => {\n  dispatch({\n    type: GET_OLD_QUESTIONS,\n    payload: questions\n  })\n} \n\nexport const getNextQuestion = (object) => (dispatch) => {\n  let random\n  if(object.length !== 0){\n     random = object[Math.floor(Math.random() * object.length)];\n  }else{\n    random = {}\n  }\n  dispatch({\n    type: GET_NEXT_QUESTION,\n    payload: object,\n    payload1: random\n\n  });\n}\n\nexport const fetchQuiz = () =>  (dispatch) => {\n  dispatch({type: FETCH_QUIZ_REQUEST});\n  return  client.getEntries().then(entries => {\n      const entriesItems = entries.items\n      const random = entriesItems[Math.floor(Math.random() * entriesItems.length)];\n      const randomId = random.sys.id\n      const entryFiltered = entriesItems.filter(entry => entry.sys.id !== randomId)\n     \n      dispatch({\n              type: FETCH_QUIZ_SUCCESS,\n              payload: entryFiltered,\n              payload1: random\n            })\n    })\n    .catch(error => {\n      dispatch({type: FETCH_QUIZ_FAILURE, payload: error})\n    console.error('error fetch the content', error)\n  })\n};\n\n\nexport const answerStatus = () => (dispatch) => {\n  dispatch({\n    type: ANSWER_STATUS,\n  });\n};\n","import {\n  ADD_USERNAME,\n  GET_OLD_QUESTIONS,\n  FETCH_QUIZ_REQUEST,\n  FETCH_QUIZ_SUCCESS,\n  FETCH_QUIZ_FAILURE,\n  ADD_SCORE,\n  RESET_SCORE,\n  GET_NEXT_QUESTION,\n  ANSWER_STATUS,\n} from '../actions/quizAction';\n\nconst initialState = {\n  username: '',\n  questionEntries: [],\n  prevQuestions: [],\n  currentQuestion: {},\n  isAnswered: false,\n  score: 0,\n  counter: 0,\n  isFetching: false,\n  error: false,\n};\n\nexport default function quizReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_USERNAME:\n      return {\n        ...state,\n        username: action.username\n      };\n    case FETCH_QUIZ_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case FETCH_QUIZ_SUCCESS:\n      return {\n        ...state,\n        isFetching: false, \n        questionEntries: action.payload,\n        currentQuestion: action.payload1,\n        prevQuestions:  [...state.prevQuestions, action.payload1]\n      }; \n    case FETCH_QUIZ_FAILURE:\n      return {\n        ...state,\n        isFetching: false, \n        error: true\n      }; \n    case GET_NEXT_QUESTION:\n      return {\n        ...state,\n        questionEntries:  action.payload,\n        currentQuestion: action.payload1,\n        counter: state.counter + 1, \n        isAnswered: false\n      };   \n    case GET_OLD_QUESTIONS:\n      return {\n        ...state,\n        prevQuestions:   [...state.prevQuestions, action.payload]\n      }; \n    case ADD_SCORE:\n      return {\n        ...state,\n        score: state.score + action.score,\n\n      }; \n    case RESET_SCORE:\n      return {\n        ...state,\n        score: 0,\n        counter: 0,\n        questionEntries: [],\n        currentQuestion: {},\n        prevQuestions: [],\n        username: '',\n      }; \n    case ANSWER_STATUS:\n    return {\n      ...state, \n      isAnswered :true\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux'\nimport quizReducer from './quizReducer'\n\n\nexport default combineReducers({\n  data: quizReducer\n});\n","import { createStore, applyMiddleware} from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/\";\n\n \nconst initialState = {};\n\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\n\n\nexport default store","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { withRouter } from 'react-router-dom';\n//redux\nimport compose from 'recompose/compose';\nimport { connect } from \"react-redux\";\nimport {resetScore} from \"../../actions/quizAction\";\n\nimport { NavLink } from 'react-router-dom';\n\n\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  bar: {\n    backgroundColor: '#7f0000'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -18,\n    marginRight: 20,\n    color: 'white'\n  }\n};\nclass Navbar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      openDialog: false,\n    }\n  }\n  \n  handleClose = () => {\n    this.setState({ openDialog: false });\n  };\n  \n  handleCloseYes = () => {\n    this.setState({ openDialog: false });\n    this.props.history.push(\"/nusantara-quiz\")\n    this.props.resetScore()\n  };\n  \n  handleBackHome = () => {\n    if(this.props.counter >0){\n      this.setState({ openDialog: true})\n    }else{\n      this.props.history.push(\"/nusantara-quiz\")\n    }\n  }\n \n  render(){\n\n \n  const { classes } = this.props;\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.bar} position='static'>\n        <Toolbar variant='dense'>\n            <IconButton\n              className={classes.menuButton}\n              color='inherit'\n              aria-label='Menu'\n              onClick={this.handleBackHome}\n            >\n              <MenuIcon  />\n            </IconButton>\n      \n          <Typography variant='h6' color='inherit' className={classes.grow}>\n            Nusantara-Quiz\n          </Typography>\n            <Button component={NavLink} to=\"/nusantara-quiz/about\" color='inherit'>About</Button>\n        </Toolbar>\n      </AppBar>\n      <Dialog open={this.state.openDialog} \n        onClose={this.handleClose} \n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"  >\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n            Your state of quiz will be restart.  Are you sure to quit?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleCloseYes} color=\"primary\">\n              Yes\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              No\n            </Button>\n          </DialogActions>\n        </Dialog>\n    </div>\n  );\n}\n}\n\n\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  resetScore: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  //from ../reducers/index\n  counter: state.data.counter,\n  \n}); \n\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { resetScore }),(withRouter)\n)(Navbar);\n\n","import React from 'react'\nimport '../../styles/flag.scss';\n\nexport default function IndonesiaFlag() {\n  return (\n    <div>\n       <div className='center'>\n            <div className='flag-container'>\n              <span className='pole' />\n              <span className='knob' />\n              <span className='flag front'>\n                <span className='rect' />\n              </span>\n              <span className='flag back'>\n                <span className='rect2' />\n                <span className='shadow' />\n              </span>\n            </div>\n          </div>\n          <br/>\n          <br/>\n         <br/>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport classNames from 'classnames';\nimport red from '@material-ui/core/colors/red';\n\nimport { withRouter } from 'react-router-dom';\n//redux\nimport compose from 'recompose/compose';\nimport { connect } from \"react-redux\";\nimport { addUsername } from \"../../actions/quizAction\";\n\nconst styles = (theme) => ({\n  container: {\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    color: '#fff'\n  },\n  button:{\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[700],\n    '&:hover': {\n      backgroundColor: red[500],\n    },\n  }\n});\n\nclass NameField extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      name: \"\"\n    }\n  }\n\n  handleChange = (event) => {\n   const value = event.target.value\n   this.setState({name: value})\n \n  };\n\n  handleSubmit=(event)=> {\n    event.preventDefault();\n    this.props.addUsername(this.state.name)\n    this.props.history.push(\"/nusantara-quiz/quiz\")\n  }\n\n  render() {\n   const {name} = this.state\n    const { classes } = this.props;\n    return (\n      <div>\n        <form method=\"POST\" onSubmit={this.handleSubmit}>\n        <TextField\n          id='outlined-textarea'\n          label='Fill your name'\n          placeholder='username'\n          error\n          className={classes.textField}\n          margin='normal'\n          variant='outlined'\n          value={this.state.name}\n          onChange={this.handleChange}\n        />\n        <div>\n          {name.length === 0 ?\n             <Button\n             variant='contained'\n             color='inherit'\n             type=\"submit\"\n             value=\"submit\"\n             className={classNames(classes.button)}\n             size=\"large\"\n             disabled\n           >\n             Ready for Quiz??\n           </Button>:\n            <Button\n            variant='contained'\n            color='inherit'\n            type=\"submit\"\n            value=\"submit\"\n            className={classNames(classes.button)}\n            size=\"large\"\n        \n          >\n            Ready for Quiz??\n          </Button>\n          }\n         \n        </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nNameField.propTypes = {\n  classes: PropTypes.object.isRequired,\n  username: PropTypes.string.isRequired\n};\n\n\nconst mapStateToProps = state => ({\n  //from ../reducers/index\n  username: state.data.username,\n  \n}); \n\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { addUsername }),(withRouter)\n)(NameField);\n\n\n","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport IndonesiaFlag from './others/IndonesiaFlag'\nimport NameField from './others/NameField'\n\nexport default class OpeningPage extends Component {\n  render() {\n    return (\n      <div>\n        <header className='App-header'>\n          <IndonesiaFlag/>\n          <br/>\n          <p>\n           Welcome to Nusantara Quiz\n          </p>\n          <NameField/>\n        </header>\n      </div>\n    );\n  }\n}\n","import React from 'react'\nimport  '../styles/App.css';\n\nexport default function About() {\n  return (\n    <header className=\"App-header\">\n      <h1>About Nusantara Quiz</h1>\n      <p>The quiz consists of Indonesia insights </p>\n      <h2>Feel free to give feedback : </h2> <code>rima.augustine@gmail.com </code>\n    </header>\n  )\n}\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1\n  }\n});\n\nclass Choices extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false,\n      userAnswered : this.props.isanswered\n    };\n  }\n\n  onHover = (e) => {\n    e.preventDefault();\n    this.setState({ hover: true });\n  };\n\n  onLeave = (e) => {\n    e.preventDefault();\n    this.setState({ hover: false });\n  \n  };\n  render() {\n    const {isanswered} = this.props;\n    return (\n     \n      <div>\n        {isanswered === \"false\"?  <Paper\n       {...this.props}\n       onMouseOver={this.onHover}\n       onMouseOut={this.onLeave}\n       className={this.state.hover ? this.props.paperclasshov: this.props.paperclass} \n     >\n       {this.props.children}\n     </Paper>\n     : <Paper\n     {...this.props}\n     onMouseOver={this.onHover}\n     onMouseOut={this.onLeave}\n     className={ this.props.paperclass} \n   >\n     {this.props.children}\n   </Paper>\n    }\n      \n       \n      </div>\n    );\n  }\n}\n\n\n\nconst mapStateToProps = (state) => ({\n  //from ../reducers/index\n  isanswered: (state.data.isAnswered).toString()\n});\n\n\nexport default compose(\n  withStyles(styles),\n  connect(\n    mapStateToProps,\n    {}\n  )\n)(Choices);\n\n\n","import styled from 'styled-components'\n\nexport const ImageQuestion = styled.img`\n    width: 50%;\n    height: 'auto';\n@media (min-width: 700px) {\n    max-width: 20%;\n    height: 'auto';\n  }\n\n`\nexport const textCounter = {\n  textAlign:\"left\", fontSize:12,  fontStyle:\"italic\" \n}\n\nexport const styles = (theme) => ({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center',\n      color: theme.palette.text.primary,\n      backgroundColor: '#fff'\n    },\n    paperHov: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center',\n      color: theme.palette.text.primary,\n      backgroundColor: '#b0bec5',\n    },\n    answeredColor:{\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center',\n      color: theme.palette.text.primary,\n      backgroundColor: '#b0bec5',\n    },\n    answeredColorCorr:{\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center',\n      color: theme.palette.text.primary,\n      backgroundColor: '#558b2f',\n    },\n    answeredColorWrong:{\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center',\n      color: '#fff',\n      backgroundColor: '#b71c1c',\n    }\n    \n  });\n  ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//styles\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n//redux\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { addScore, answerStatus } from '../actions/quizAction';\n//component\nimport Choices from './others/Choices';\nimport {styles, ImageQuestion, textCounter} from '../styles/QuizAnswer.style'\n\nclass QuizAnswer extends Component {\nconstructor(props){\n  super(props);\n  this.state={\n    userAnswer: \"\"\n  }\n}\n\n//function to handle the answer after user click the choice\n  onHandleAnswer = (e) => {\n    if(!this.props.isAnswered){\n        const answer = e.currentTarget.id;\n        //to keep the answer in the state\n        this.setState({\n          userAnswer: e.currentTarget.id\n        })\n        //if correct\n        if (answer === this.props.answer) {\n          this.props.addScore(10);\n          this.props.answerStatus();\n        //if wrong\n         } else {\n          this.props.addScore(0);\n          this.props.answerStatus();\n      }\n    }\n  };\n \n\n  render() {\n    const { classes, choices, question, imageTitle, imageUrl, counter, isAnswered, answer } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={24}>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n            <p style={textCounter}>Question #{counter + 1}/10</p>\n              <h2>{question}</h2>\n              <ImageQuestion  src={imageUrl} alt={imageTitle} />\n            </Paper>\n          </Grid>\n          {choices\n            ? choices.map((choice, i) =>  {\n              //different colors on choice button\n              let styleChoice;\n                if(isAnswered){\n                  if(choice===answer){\n                    styleChoice=classes.answeredColorCorr;\n                  }else if(choice === this.state.userAnswer){\n                    styleChoice=classes.answeredColorWrong;\n                  }else{\n                    styleChoice=classes.answeredColor;\n                  }\n                }else{\n                  styleChoice=classes.paper;\n                }\n             return (\n                <Grid key={i} item xs={12} sm={6}>\n                  <Choices\n                    onClick={this.onHandleAnswer}\n                    paperclass={styleChoice}\n                    paperclasshov={classes.paperHov}\n                    id={choice}\n                  >\n                    {choice}\n                  </Choices>\n                </Grid>\n              )\n              })\n            : []}\n        </Grid>\n        <br/>\n      </div>\n    );\n  }\n}\n\nQuizAnswer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  questionEntries: PropTypes.array.isRequired,\n  currentQuestion: PropTypes.object.isRequired,\n  prevQuestions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  isAnswered: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  //from ../reducers/index\n  questionEntries: state.data.questionEntries,\n  currentQuestion: state.data.currentQuestion,\n  prevQuestions: state.data.prevQuestions,\n  counter: state.data.counter,\n  isAnswered: state.data.isAnswered\n});\n\nexport default compose(\n  withStyles(styles),\n  connect(\n    mapStateToProps,\n    { addScore, answerStatus }\n  )\n)(QuizAnswer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForward from '@material-ui/icons/ArrowForwardIos';\nimport Fab from '@material-ui/core/Fab';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Typography from '@material-ui/core/Typography';\n\n//redux\nimport { connect } from \"react-redux\";\nimport {\n  getNextQuestion,\n} from '../actions/quizAction';\nimport compose from 'recompose/compose';\n\n\nconst styles = (theme) => ({\n  text: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingLeft: theme.spacing.unit * 2,\n    paddingRight: theme.spacing.unit * 2\n  },\n  paper: {\n    paddingBottom: 50\n  },\n  list: {\n    marginBottom: theme.spacing.unit * 2\n  },\n  subHeader: {\n    backgroundColor: theme.palette.background.paper\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    backgroundColor:'#b53d2a'\n  },\n  toolbar: {\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: -30,\n    right: 0,\n    margin: '0 auto',\n    backgroundColor:'#4e0000'\n  }\n});\n\nclass StatusQuiz extends Component {\n\n\n  //move it to QUIZ\n  compare = () => {\n    const { questionEntries, prevQuestions, currentQuestion } = this.props;\n    const oldQuestionsId = prevQuestions.map((question) => question.sys.id);\n    const questionId = currentQuestion.sys.id;\n\n    let quizFiltered;\n    if (questionEntries.length !== 0) {\n      quizFiltered = questionEntries.filter(\n        (entry) =>\n          !oldQuestionsId.includes(entry.sys.id) && entry.sys.id !== questionId\n      );\n    }\n    return quizFiltered;\n  };\n\n  handleOnClick = () => {\n    this.props.getNextQuestion(this.compare());\n\n  }\n\n\n  render() {\n    \n    const { classes, username, score, isAnswered} = this.props;\n    \n    return (\n      <div>\n        <AppBar position='fixed' color='primary' className={classes.appBar}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton color='inherit' aria-label='Open drawer'>\n              <AccountCircle />\n              <Typography variant='h6' color='inherit'>\n                {username} -\n              </Typography>\n              <Typography variant='h6' color='inherit' style={{marginLeft:5}}>\n                 score: {score}\n              </Typography>\n            </IconButton>{\n              isAnswered?\n              <Fab color=\"primary\"  aria-label=\"Add\" className={classes.fabButton} onClick={this.handleOnClick}>\n              <ArrowForward  />\n              </Fab>:\n               <Fab color=\"primary\" disabled aria-label=\"Add\" className={classes.fabButton} onClick={this.handleOnClick}>\n               <ArrowForward  />\n               </Fab>\n              }\n           \n           \n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nStatusQuiz.propTypes = {\n  classes: PropTypes.object.isRequired,\n  username: PropTypes.string.isRequired\n};\n\n\nconst mapStateToProps = state => ({\n  //from ../reducers/index\n  username: state.data.username, \n  score: state.data.score,\n  counter: state.data.counter,\n  questionEntries: state.data.questionEntries,\n  prevQuestions: state.data.prevQuestions,\n  currentQuestion: state.data.currentQuestion,\n  isAnswered: state.data.isAnswered\n}); \n\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, {getNextQuestion})\n)(StatusQuiz);\n\n\n\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/App.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n//redux\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport {resetScore} from '../actions/quizAction'\nimport Emoji from 'react-emoji-render';\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  }\n};\n\nclass FinalPage extends Component {\n  render() {\n    const { classes, score } = this.props;\n    let finalScore;\n    if(score < 50){\n      finalScore = \"bad\";\n    }else if(score >= 50){\n      finalScore = \"good\"; \n    }else{\n      finalScore = \"best\"; \n    }\n    const NOTIFICATION_FINAL =\n      {\n      \"bad\": <h1><Emoji text=\"😢 Sorry! your score is not good\" /></h1>,\n      \"good\": <h1><Emoji text=\"Very good 😎! \" /></h1>,\n      \"best\": <h1><Emoji text=\"Bravo!! Best scores ever 🤩\"/></h1>\n    };\n    \n    return ( \n      <div>\n        <header className='App-header'>\n        {NOTIFICATION_FINAL[finalScore]}\n          <code>you got the {score} scores</code>\n          <br/>\n          <Button\n            variant='contained'\n            color='secondary'\n            className={classNames(classes.button)}\n            size='large'\n            component={NavLink}\n            to='/nusantara-quiz'\n            onClick={()=> this.props.resetScore()}\n          >\n            Try again?\n          </Button>\n        </header>\n      </div>\n    );\n  }\n}\n\n\nFinalPage.propTypes = {\n  score: PropTypes.number.isRequired,\n  classes: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n  //from ../reducers/index\n  score: state.data.score\n});\n\nexport default compose(\n  withStyles(styles),\n  connect(\n    mapStateToProps,\n    {resetScore}\n  )\n)(FinalPage);\n","import React from 'react';\nimport '../../styles/App.css';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nfunction Loading(props) {\n  const { classes } = props;\n  return (\n    <header className=\"App-header\">\n      <CircularProgress className={classes.progress} color=\"secondary\" />\n     \n    </header>\n  );\n}\n\nLoading.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loading);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//redux\nimport { connect } from 'react-redux';\nimport {\n  fetchQuiz,\n  getPrevQuestions,\n  getNextQuestion\n} from '../actions/quizAction';\n//components\nimport QuizAnswer from './QuizAnswer';\nimport StatusQuiz from './StatusQuiz';\nimport FinalPage from './FinalPage';\nimport Loading from './others/loading';\n\n\nclass Quiz extends Component {\n\n  componentDidMount() {\n    //invoke the fetch API action \n    this.props.fetchQuiz();\n  }\n    //function for shuffling the choices\n  shuffle = (array) => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\n  //after user answer, question move to prevQuestions\n  oldQuestionsArray = () => {\n    const { currentQuestion } = this.props;\n    this.props.getPrevQuestions(currentQuestion);\n  };\n\n  render() {\n    const { isFetching, currentQuestion, counter } = this.props;\n    //mapping data from API object\n    let mapQuestion;\n    let mapChoices;\n    let mapAnswer;\n    let imageUrl;\n    let imageTitle;\n      if (currentQuestion.fields) {\n          mapQuestion = currentQuestion.fields.question \n          mapAnswer = currentQuestion.fields.answer\n          mapChoices =  this.shuffle(currentQuestion.fields.choices)\n          imageUrl = currentQuestion.fields.imageQuestion.fields.file.url\n          imageTitle = currentQuestion.fields.imageQuestion.fields.file.title\n      } else {\n      return <Loading/>\n      }\n   \n    return (\n      <div>\n         {isFetching? (\n          <Loading/>\n          ) : (\n          <React.Fragment>\n            {counter <= 9  ? (\n               <React.Fragment>\n              <div style={{ margin: 20 }}>\n                <QuizAnswer\n                  question={mapQuestion}\n                  choices={mapChoices}\n                  answer={mapAnswer}\n                  imageTitle={imageTitle}\n                  imageUrl={imageUrl}\n                />\n            </div>\n            <StatusQuiz  />\n            </React.Fragment>\n            ) : (\n              <FinalPage/>\n            )}\n         </React.Fragment>\n        )}\n     \n      </div>\n    );\n  }\n}\n\nQuiz.propTypes = {\n  isFetching: PropTypes.bool.isRequired,\n  currentQuestion: PropTypes.object.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\n\nconst mapStateToProps = (state) => ({\n  //from ../reducers/index\n  isFetching: state.data.isFetching,\n  currentQuestion: state.data.currentQuestion,\n  counter: state.data.counter,\n \n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchQuiz, getPrevQuestions, getNextQuestion }\n)(Quiz);\n","import React, { Component } from 'react';\n//redux-lib\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n//router\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n//style\nimport  './styles/App.css';\n//components\nimport  Navbar from \"./components/others/Navbar.jsx\"\nimport OpeningPage from \"./components/OpeningPage.jsx\"\nimport About from \"./components/About.js\"\nimport Quiz from \"./components/Quiz\"\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n      <Router>\n      <div className=\"App\">\n        <Navbar/>\n        <Route path=\"/nusantara-quiz\" exact component={OpeningPage} />\n        <Route path=\"/nusantara-quiz/about/\" component={About} />\n        <Route path=\"/nusantara-quiz/quiz/\" component={Quiz} />\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}